# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import cafe_pb2 as cafe__pb2


class MenuStub(object):
    """Our Cafe's interface
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Pricing = channel.unary_unary(
                '/cafe.Menu/Pricing',
                request_serializer=cafe__pb2.ClientRequest.SerializeToString,
                response_deserializer=cafe__pb2.ProductInfo.FromString,
                )
        self.SpecialOfTheDay = channel.unary_unary(
                '/cafe.Menu/SpecialOfTheDay',
                request_serializer=cafe__pb2.Weekday.SerializeToString,
                response_deserializer=cafe__pb2.SpecialDrink.FromString,
                )


class MenuServicer(object):
    """Our Cafe's interface
    """

    def Pricing(self, request, context):
        """Returns the price of an item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpecialOfTheDay(self, request, context):
        """Returns the price of an item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MenuServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Pricing': grpc.unary_unary_rpc_method_handler(
                    servicer.Pricing,
                    request_deserializer=cafe__pb2.ClientRequest.FromString,
                    response_serializer=cafe__pb2.ProductInfo.SerializeToString,
            ),
            'SpecialOfTheDay': grpc.unary_unary_rpc_method_handler(
                    servicer.SpecialOfTheDay,
                    request_deserializer=cafe__pb2.Weekday.FromString,
                    response_serializer=cafe__pb2.SpecialDrink.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cafe.Menu', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Menu(object):
    """Our Cafe's interface
    """

    @staticmethod
    def Pricing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cafe.Menu/Pricing',
            cafe__pb2.ClientRequest.SerializeToString,
            cafe__pb2.ProductInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SpecialOfTheDay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cafe.Menu/SpecialOfTheDay',
            cafe__pb2.Weekday.SerializeToString,
            cafe__pb2.SpecialDrink.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BusinessStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OpeningHours = channel.unary_unary(
                '/cafe.Business/OpeningHours',
                request_serializer=cafe__pb2.Weekday.SerializeToString,
                response_deserializer=cafe__pb2.HoursInfo.FromString,
                )


class BusinessServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OpeningHours(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BusinessServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OpeningHours': grpc.unary_unary_rpc_method_handler(
                    servicer.OpeningHours,
                    request_deserializer=cafe__pb2.Weekday.FromString,
                    response_serializer=cafe__pb2.HoursInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cafe.Business', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Business(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OpeningHours(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cafe.Business/OpeningHours',
            cafe__pb2.Weekday.SerializeToString,
            cafe__pb2.HoursInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
